# Generated by Django 5.1.6 on 2025-03-08 21:53

import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('git_lab', '0003_gitlabproject_group_historicalgitlabproject_group'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GitLabUser',
            fields=[
                ('enumeration_attack_uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar_url', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('locked', models.BooleanField(blank=True, default=False, null=True)),
                ('membership_state', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('web_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'GitLab User',
                'verbose_name_plural': 'GitLab Users',
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalGitLabUser',
            fields=[
                ('enumeration_attack_uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar_url', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(db_index=True)),
                ('locked', models.BooleanField(blank=True, default=False, null=True)),
                ('membership_state', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('web_url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '_Historical Record for GitLabUser',
                'verbose_name_plural': '_Historical Records for GitLabUser',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]

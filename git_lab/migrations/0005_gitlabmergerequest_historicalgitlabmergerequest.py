# Generated by Django 5.1.6 on 2025-03-09 02:49

import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('git_lab', '0004_gitlabuser_historicalgitlabuser'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GitLabMergeRequest',
            fields=[
                ('enumeration_attack_uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, unique=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('web_url', models.CharField(blank=True, max_length=255, null=True)),
                ('iid', models.IntegerField(blank=True, null=True)),
                ('blocking_discussions_resolved', models.BooleanField(blank=True, default=False, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('draft', models.BooleanField(blank=True, default=False, null=True)),
                ('has_conflicts', models.BooleanField(blank=True, default=False, null=True)),
                ('merged_at', models.DateTimeField(blank=True, null=True)),
                ('prepared_at', models.DateTimeField(blank=True, null=True)),
                ('references_long', models.CharField(blank=True, max_length=255, null=True)),
                ('references_relative', models.CharField(blank=True, max_length=255, null=True)),
                ('references_short', models.CharField(blank=True, max_length=255, null=True)),
                ('sha', models.CharField(blank=True, max_length=255, null=True)),
                ('source_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('target_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('task_completion_status_completed_count', models.IntegerField(blank=True, null=True)),
                ('task_completion_status_count', models.IntegerField(blank=True, null=True)),
                ('time_stats_human_time_estimate', models.IntegerField(blank=True, null=True)),
                ('time_stats_human_total_time_spent', models.IntegerField(blank=True, null=True)),
                ('time_stats_time_estimate', models.IntegerField(blank=True, null=True)),
                ('time_stats_total_time_spent', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('merged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='merge_requests_merged', to='git_lab.gitlabuser')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='git_lab.gitlabproject')),
                ('reviewers', models.ManyToManyField(blank=True, to='git_lab.gitlabuser')),
            ],
            options={
                'verbose_name': 'GitLab Merge Request',
                'verbose_name_plural': 'GitLab Merge Requests',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalGitLabMergeRequest',
            fields=[
                ('enumeration_attack_uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False)),
                ('id', models.IntegerField(db_index=True)),
                ('web_url', models.CharField(blank=True, max_length=255, null=True)),
                ('iid', models.IntegerField(blank=True, null=True)),
                ('blocking_discussions_resolved', models.BooleanField(blank=True, default=False, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('draft', models.BooleanField(blank=True, default=False, null=True)),
                ('has_conflicts', models.BooleanField(blank=True, default=False, null=True)),
                ('merged_at', models.DateTimeField(blank=True, null=True)),
                ('prepared_at', models.DateTimeField(blank=True, null=True)),
                ('references_long', models.CharField(blank=True, max_length=255, null=True)),
                ('references_relative', models.CharField(blank=True, max_length=255, null=True)),
                ('references_short', models.CharField(blank=True, max_length=255, null=True)),
                ('sha', models.CharField(blank=True, max_length=255, null=True)),
                ('source_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('target_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('task_completion_status_completed_count', models.IntegerField(blank=True, null=True)),
                ('task_completion_status_count', models.IntegerField(blank=True, null=True)),
                ('time_stats_human_time_estimate', models.IntegerField(blank=True, null=True)),
                ('time_stats_human_total_time_spent', models.IntegerField(blank=True, null=True)),
                ('time_stats_time_estimate', models.IntegerField(blank=True, null=True)),
                ('time_stats_total_time_spent', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('merged_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='git_lab.gitlabuser')),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='git_lab.gitlabproject')),
            ],
            options={
                'verbose_name': '_Historical Record for GitLabMergeRequest',
                'verbose_name_plural': '_Historical Records for GitLabMergeRequest',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]

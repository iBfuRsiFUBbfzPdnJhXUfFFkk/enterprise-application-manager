# Generated by Django 5.1.6 on 2025-02-28 00:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('comment', models.TextField(blank=True, null=True)),
                ('ldap_field', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Acronym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('pronunciation', models.CharField(blank=True, max_length=255, null=True)),
                ('supporting_links_csv', models.TextField(blank=True, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', 'acronym', '-id'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_externally_facing', models.BooleanField(blank=True, default=False, null=True)),
                ('is_platform', models.BooleanField(blank=True, default=False, null=True)),
                ('type_lifecycle', models.CharField(blank=True, choices=[('Active', 'Active'), ('Awaiting Approval', 'Awaiting Approval'), ('Deprecated', 'Deprecated'), ('In Development', 'In Development'), ('Hyper Care', 'Hyper Care'), ('Idea Submission', 'Idea Submission'), ('In Deprecation Period', 'In Deprecation Period'), ('Limited Support', 'Limited Support'), ('In Planning', 'In Planning'), ('Approval Rejected', 'Approval Rejected')], max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_launch', models.DateField(blank=True, null=True)),
                ('is_externally_facing', models.BooleanField(blank=True, default=False, null=True)),
                ('is_legacy', models.BooleanField(blank=True, default=False, null=True)),
                ('is_required_to_adhere_to_california_consumer_privacy_act_ccpa', models.BooleanField(blank=True, default=False, null=True)),
                ('is_required_to_adhere_to_general_data_protection_regulation_gdpr', models.BooleanField(blank=True, default=False, null=True)),
                ('is_required_to_adhere_to_payment_card_industry_data_security_standard_pci_dss', models.BooleanField(blank=True, default=False, null=True)),
                ('is_storing_nonpublic_personal_information_npi', models.BooleanField(blank=True, default=False, null=True)),
                ('is_storing_personally_identifiable_information_pii', models.BooleanField(blank=True, default=False, null=True)),
                ('is_storing_protected_health_information_phi', models.BooleanField(blank=True, default=False, null=True)),
                ('is_using_artificial_intelligence', models.BooleanField(blank=True, default=False, null=True)),
                ('link_development_server', models.CharField(blank=True, max_length=255, null=True)),
                ('link_divio', models.CharField(blank=True, max_length=255, null=True)),
                ('link_gitlab_repository', models.CharField(blank=True, max_length=255, null=True)),
                ('link_gitlab_wiki', models.CharField(blank=True, max_length=255, null=True)),
                ('link_logs', models.CharField(blank=True, max_length=255, null=True)),
                ('link_lucid', models.CharField(blank=True, max_length=255, null=True)),
                ('link_open_ai', models.CharField(blank=True, max_length=255, null=True)),
                ('link_postman', models.CharField(blank=True, max_length=255, null=True)),
                ('link_production_server', models.CharField(blank=True, max_length=255, null=True)),
                ('link_production_server_external', models.CharField(blank=True, max_length=255, null=True)),
                ('link_sentry_io', models.CharField(blank=True, max_length=255, null=True)),
                ('link_software_bill_of_materials_sbom', models.CharField(blank=True, max_length=255, null=True)),
                ('link_staging_server', models.CharField(blank=True, max_length=255, null=True)),
                ('link_support_email', models.CharField(blank=True, max_length=255, null=True)),
                ('link_teams_channel', models.CharField(blank=True, max_length=255, null=True)),
                ('link_training', models.CharField(blank=True, max_length=255, null=True)),
                ('link_ticket_submission', models.CharField(blank=True, max_length=255, null=True)),
                ('link_whiteboard', models.CharField(blank=True, max_length=255, null=True)),
                ('link_wrike', models.CharField(blank=True, max_length=255, null=True)),
                ('peak_userbase', models.IntegerField(blank=True, null=True)),
                ('type_authentication', models.CharField(blank=True, choices=[('Active Directory (AD)', 'Active Directory (AD)'), ('Custom', 'Custom')], max_length=255, null=True)),
                ('type_authorization', models.CharField(blank=True, choices=[('Active Directory (AD)', 'Active Directory (AD)'), ('Custom', 'Custom')], max_length=255, null=True)),
                ('type_deployment_medium', models.CharField(blank=True, choices=[('Cloud - Azure Kubernetes Service (AKS)', 'Cloud - Azure Kubernetes Service (AKS)'), ('Cloud - Divio', 'Cloud - Divio'), ('On-Premises - Windows Internet Information Services (IIS)', 'On-Premises - Windows Internet Information Services (IIS)'), ('On-Premises - Debian Linux', 'On-Premises - Debian Linux')], max_length=255, null=True)),
                ('type_lifecycle', models.CharField(blank=True, choices=[('Active', 'Active'), ('Awaiting Approval', 'Awaiting Approval'), ('Deprecated', 'Deprecated'), ('In Development', 'In Development'), ('Hyper Care', 'Hyper Care'), ('Idea Submission', 'Idea Submission'), ('In Deprecation Period', 'In Deprecation Period'), ('Limited Support', 'Limited Support'), ('In Planning', 'In Planning'), ('Approval Rejected', 'Approval Rejected')], max_length=255, null=True)),
                ('type_platform_target', models.CharField(blank=True, choices=[('Background Task', 'Background Task'), ('Chrome Plugin', 'Chrome Plugin'), ('IOS', 'IOS'), ('Microsoft Excel', 'Microsoft Excel'), ('Microsoft Excel + Visual Basic for Applications', 'Microsoft Excel + Visual Basic for Applications'), ('Microsoft Word', 'Microsoft Word'), ('WEB', 'WEB')], max_length=255, null=True)),
                ('application_downstream_dependencies', models.ManyToManyField(blank=True, to='core.application')),
                ('application_upstream_dependencies', models.ManyToManyField(blank=True, to='core.application')),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('application_group_platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='applications', to='core.applicationgroup')),
                ('application_groups', models.ManyToManyField(blank=True, to='core.applicationgroup')),
            ],
            options={
                'ordering': ['name', 'acronym', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address_continued', models.CharField(blank=True, max_length=255, null=True)),
                ('location_city', models.CharField(blank=True, max_length=255, null=True)),
                ('location_county', models.CharField(blank=True, max_length=255, null=True)),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('location_postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('location_state_code', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('DC', 'District of Columbia'), ('MP', 'Northern Mariana Islands'), ('GU', 'Guam'), ('VI', 'Virgin Islands'), ('PW', 'Palau'), ('FM', 'Federated States of Micronesia'), ('MH', 'Marshall Islands'), ('AS', 'American Samoa'), ('PI', 'Puerto Rico')], max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='CronJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('encrypted_password', models.CharField(blank=True, max_length=255, null=True)),
                ('encrypted_username', models.CharField(blank=True, max_length=255, null=True)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_v4_internal', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('schema', models.CharField(blank=True, max_length=255, null=True)),
                ('type_data_storage_form', models.CharField(blank=True, choices=[('Blob', 'Blob'), ('Document', 'Document'), ('Relational', 'Relational')], max_length=255, null=True)),
                ('type_database_flavor', models.CharField(blank=True, choices=[('MariaDB', 'MariaDB'), ('PostgreSQL', 'PostgreSQL')], max_length=255, null=True)),
                ('type_environment', models.CharField(blank=True, choices=[('Development', 'Development'), ('Local', 'Local'), ('Production', 'Production'), ('Staging', 'Staging')], max_length=255, null=True)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='databases', to='core.application')),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['schema', '-id'],
            },
        ),
        migrations.CreateModel(
            name='DataPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='DataUseException',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('is_heavy', models.BooleanField(blank=True, default=False, null=True)),
                ('type_programing_concept', models.CharField(blank=True, choices=[('Binary', 'Binary'), ('Framework', 'Framework'), ('Language', 'Language'), ('Package', 'Package'), ('Protocol', 'Protocol'), ('Standard', 'Standard')], max_length=255, null=True)),
                ('applications', models.ManyToManyField(blank=True, to='core.application')),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Dependencies',
                'ordering': ['name', 'type_programing_concept', 'version', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('blob_content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('blob_data', models.BinaryField(blank=True, null=True)),
                ('blob_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('blob_size', models.IntegerField(blank=True, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('formula', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAcronym',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('pronunciation', models.CharField(blank=True, max_length=255, null=True)),
                ('supporting_links_csv', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical acronym',
                'verbose_name_plural': 'historical acronyms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApplicationGroup',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_externally_facing', models.BooleanField(blank=True, default=False, null=True)),
                ('is_platform', models.BooleanField(blank=True, default=False, null=True)),
                ('type_lifecycle', models.CharField(blank=True, choices=[('Active', 'Active'), ('Awaiting Approval', 'Awaiting Approval'), ('Deprecated', 'Deprecated'), ('In Development', 'In Development'), ('Hyper Care', 'Hyper Care'), ('Idea Submission', 'Idea Submission'), ('In Deprecation Period', 'In Deprecation Period'), ('Limited Support', 'Limited Support'), ('In Planning', 'In Planning'), ('Approval Rejected', 'Approval Rejected')], max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical application group',
                'verbose_name_plural': 'historical application groups',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClient',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address_continued', models.CharField(blank=True, max_length=255, null=True)),
                ('location_city', models.CharField(blank=True, max_length=255, null=True)),
                ('location_county', models.CharField(blank=True, max_length=255, null=True)),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('location_postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('location_state_code', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('DC', 'District of Columbia'), ('MP', 'Northern Mariana Islands'), ('GU', 'Guam'), ('VI', 'Virgin Islands'), ('PW', 'Palau'), ('FM', 'Federated States of Micronesia'), ('MH', 'Marshall Islands'), ('AS', 'American Samoa'), ('PI', 'Puerto Rico')], max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical client',
                'verbose_name_plural': 'historical clients',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCronJob',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical cron job',
                'verbose_name_plural': 'historical cron jobs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDatabase',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('encrypted_password', models.CharField(blank=True, max_length=255, null=True)),
                ('encrypted_username', models.CharField(blank=True, max_length=255, null=True)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_v4_internal', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('schema', models.CharField(blank=True, max_length=255, null=True)),
                ('type_data_storage_form', models.CharField(blank=True, choices=[('Blob', 'Blob'), ('Document', 'Document'), ('Relational', 'Relational')], max_length=255, null=True)),
                ('type_database_flavor', models.CharField(blank=True, choices=[('MariaDB', 'MariaDB'), ('PostgreSQL', 'PostgreSQL')], max_length=255, null=True)),
                ('type_environment', models.CharField(blank=True, choices=[('Development', 'Development'), ('Local', 'Local'), ('Production', 'Production'), ('Staging', 'Staging')], max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.application')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical database',
                'verbose_name_plural': 'historical databases',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDataPoint',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical data point',
                'verbose_name_plural': 'historical data points',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDataUseException',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical data use exception',
                'verbose_name_plural': 'historical data use exceptions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDependency',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('is_heavy', models.BooleanField(blank=True, default=False, null=True)),
                ('type_programing_concept', models.CharField(blank=True, choices=[('Binary', 'Binary'), ('Framework', 'Framework'), ('Language', 'Language'), ('Package', 'Package'), ('Protocol', 'Protocol'), ('Standard', 'Standard')], max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical dependency',
                'verbose_name_plural': 'historical Dependencies',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('blob_content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('blob_data', models.BinaryField(blank=True, null=True)),
                ('blob_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('blob_size', models.IntegerField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical document',
                'verbose_name_plural': 'historical documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFormula',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('formula', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical formula',
                'verbose_name_plural': 'historical formulas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHotfix',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical hotfix',
                'verbose_name_plural': 'historical hotfixes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIncident',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical incident',
                'verbose_name_plural': 'historical incidents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalJobLevel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical job level',
                'verbose_name_plural': 'historical job levels',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLink',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical link',
                'verbose_name_plural': 'historical links',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrganization',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical organization',
                'verbose_name_plural': 'historical organizations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPolicy',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical policy',
                'verbose_name_plural': 'historical policies',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code_billing', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical project',
                'verbose_name_plural': 'historical projects',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReleaseBundle',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_code_freeze', models.DateField(blank=True, null=True)),
                ('date_demo', models.DateField(blank=True, null=True)),
                ('date_release', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical release bundle',
                'verbose_name_plural': 'historical release bundles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical report',
                'verbose_name_plural': 'historical reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRequirement',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_for_soc', models.BooleanField(blank=True, default=False, null=True)),
                ('is_for_spsrd', models.BooleanField(blank=True, default=False, null=True)),
                ('is_functional_requirement', models.BooleanField(blank=True, default=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical requirement',
                'verbose_name_plural': 'historical requirements',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRisk',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical risk',
                'verbose_name_plural': 'historical risks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRole',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical role',
                'verbose_name_plural': 'historical roles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSecret',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('encrypted_value', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical secret',
                'verbose_name_plural': 'historical secrets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical server',
                'verbose_name_plural': 'historical servers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServiceProvider',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical service provider',
                'verbose_name_plural': 'historical service providers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServiceProviderSecurityRequirementsDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical service provider security requirements document',
                'verbose_name_plural': 'historical service provider security requirements documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSkill',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical skill',
                'verbose_name_plural': 'historical skills',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSoftwareBillOfMaterial',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical software bill of material',
                'verbose_name_plural': 'historical software bill of materials',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTask',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical task',
                'verbose_name_plural': 'historical tasks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTeam',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical team',
                'verbose_name_plural': 'historical teams',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTerm',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical term',
                'verbose_name_plural': 'historical terms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTool',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tool',
                'verbose_name_plural': 'historical tools',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('comment', models.TextField(blank=True, null=True)),
                ('ldap_field', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user',
                'verbose_name_plural': 'historical users',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVulnerability',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical vulnerability',
                'verbose_name_plural': 'historical vulnerabilities',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Hotfix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'hotfixes',
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='JobLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPerson',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('pronunciation', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address_continued', models.CharField(blank=True, max_length=255, null=True)),
                ('location_city', models.CharField(blank=True, max_length=255, null=True)),
                ('location_county', models.CharField(blank=True, max_length=255, null=True)),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('location_postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('location_state_code', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('DC', 'District of Columbia'), ('MP', 'Northern Mariana Islands'), ('GU', 'Guam'), ('VI', 'Virgin Islands'), ('PW', 'Palau'), ('FM', 'Federated States of Micronesia'), ('MH', 'Marshall Islands'), ('AS', 'American Samoa'), ('PI', 'Puerto Rico')], max_length=255, null=True)),
                ('date_birthday', models.DateField(blank=True, null=True)),
                ('date_hired', models.DateField(blank=True, null=True)),
                ('date_left', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('is_architect', models.BooleanField(blank=True, default=False, null=True)),
                ('is_developer', models.BooleanField(blank=True, default=False, null=True)),
                ('is_employee', models.BooleanField(blank=True, default=True, null=True)),
                ('is_lead_developer', models.BooleanField(blank=True, default=False, null=True)),
                ('is_product_manager', models.BooleanField(blank=True, default=False, null=True)),
                ('is_product_owner', models.BooleanField(blank=True, default=False, null=True)),
                ('is_project_manager', models.BooleanField(blank=True, default=False, null=True)),
                ('is_scrum_master', models.BooleanField(blank=True, default=False, null=True)),
                ('is_stakeholder', models.BooleanField(blank=True, default=False, null=True)),
                ('link_gitlab_username', models.CharField(blank=True, max_length=255, null=True)),
                ('link_sharepoint_profile', models.CharField(blank=True, max_length=255, null=True)),
                ('name_first', models.CharField(blank=True, max_length=255, null=True)),
                ('name_last', models.CharField(blank=True, max_length=255, null=True)),
                ('name_preferred', models.CharField(blank=True, max_length=255, null=True)),
                ('type_job_level', models.CharField(blank=True, choices=[('Junior', 'Junior'), ('Mid-Level', 'Mid-Level'), ('Senior', 'Senior')], max_length=255, null=True)),
                ('type_job_title', models.CharField(blank=True, choices=[('Developer', 'Developer'), ('Director', 'Director'), ('Lead Developer', 'Lead Developer'), ('Lead Software Architect', 'Lead Software Architect'), ('Manager', 'Manager'), ('Partner', 'Partner'), ('Product Manager', 'Product Manager'), ('Product Owner', 'Product Owner'), ('Project Manager', 'Project Manager'), ('Scrum Master', 'Scrum Master'), ('Software Architect', 'Software Architect'), ('Software Support Specialist', 'Software Support Specialist')], max_length=255, null=True)),
                ('type_timezone', models.CharField(blank=True, choices=[('AKST', 'Alaska Standard Time (AKST)'), ('AST', 'Atlantic Standard Time (AST)'), ('CST', 'Central Standard Time (CST)'), ('EST', 'Eastern Standard Time (EST)'), ('HST', 'Hawaii-Aleutian Standard Time (HST)'), ('MST', 'Mountain Standard Time (MST)'), ('PST', 'Pacific Standard Time (PST)')], max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('job_level', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.joblevel')),
            ],
            options={
                'verbose_name': 'historical person',
                'verbose_name_plural': 'historical people',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('pronunciation', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address_continued', models.CharField(blank=True, max_length=255, null=True)),
                ('location_city', models.CharField(blank=True, max_length=255, null=True)),
                ('location_county', models.CharField(blank=True, max_length=255, null=True)),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('location_postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('location_state_code', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('DC', 'District of Columbia'), ('MP', 'Northern Mariana Islands'), ('GU', 'Guam'), ('VI', 'Virgin Islands'), ('PW', 'Palau'), ('FM', 'Federated States of Micronesia'), ('MH', 'Marshall Islands'), ('AS', 'American Samoa'), ('PI', 'Puerto Rico')], max_length=255, null=True)),
                ('date_birthday', models.DateField(blank=True, null=True)),
                ('date_hired', models.DateField(blank=True, null=True)),
                ('date_left', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('is_architect', models.BooleanField(blank=True, default=False, null=True)),
                ('is_developer', models.BooleanField(blank=True, default=False, null=True)),
                ('is_employee', models.BooleanField(blank=True, default=True, null=True)),
                ('is_lead_developer', models.BooleanField(blank=True, default=False, null=True)),
                ('is_product_manager', models.BooleanField(blank=True, default=False, null=True)),
                ('is_product_owner', models.BooleanField(blank=True, default=False, null=True)),
                ('is_project_manager', models.BooleanField(blank=True, default=False, null=True)),
                ('is_scrum_master', models.BooleanField(blank=True, default=False, null=True)),
                ('is_stakeholder', models.BooleanField(blank=True, default=False, null=True)),
                ('link_gitlab_username', models.CharField(blank=True, max_length=255, null=True)),
                ('link_sharepoint_profile', models.CharField(blank=True, max_length=255, null=True)),
                ('name_first', models.CharField(blank=True, max_length=255, null=True)),
                ('name_last', models.CharField(blank=True, max_length=255, null=True)),
                ('name_preferred', models.CharField(blank=True, max_length=255, null=True)),
                ('type_job_level', models.CharField(blank=True, choices=[('Junior', 'Junior'), ('Mid-Level', 'Mid-Level'), ('Senior', 'Senior')], max_length=255, null=True)),
                ('type_job_title', models.CharField(blank=True, choices=[('Developer', 'Developer'), ('Director', 'Director'), ('Lead Developer', 'Lead Developer'), ('Lead Software Architect', 'Lead Software Architect'), ('Manager', 'Manager'), ('Partner', 'Partner'), ('Product Manager', 'Product Manager'), ('Product Owner', 'Product Owner'), ('Project Manager', 'Project Manager'), ('Scrum Master', 'Scrum Master'), ('Software Architect', 'Software Architect'), ('Software Support Specialist', 'Software Support Specialist')], max_length=255, null=True)),
                ('type_timezone', models.CharField(blank=True, choices=[('AKST', 'Alaska Standard Time (AKST)'), ('AST', 'Atlantic Standard Time (AST)'), ('CST', 'Central Standard Time (CST)'), ('EST', 'Eastern Standard Time (EST)'), ('HST', 'Hawaii-Aleutian Standard Time (HST)'), ('MST', 'Mountain Standard Time (MST)'), ('PST', 'Pacific Standard Time (PST)')], max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('job_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='people_who_hold_this_job_level', to='core.joblevel')),
            ],
            options={
                'verbose_name_plural': 'people',
                'ordering': ['name_last', 'name_first', 'id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalApplication',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_launch', models.DateField(blank=True, null=True)),
                ('is_externally_facing', models.BooleanField(blank=True, default=False, null=True)),
                ('is_legacy', models.BooleanField(blank=True, default=False, null=True)),
                ('is_required_to_adhere_to_california_consumer_privacy_act_ccpa', models.BooleanField(blank=True, default=False, null=True)),
                ('is_required_to_adhere_to_general_data_protection_regulation_gdpr', models.BooleanField(blank=True, default=False, null=True)),
                ('is_required_to_adhere_to_payment_card_industry_data_security_standard_pci_dss', models.BooleanField(blank=True, default=False, null=True)),
                ('is_storing_nonpublic_personal_information_npi', models.BooleanField(blank=True, default=False, null=True)),
                ('is_storing_personally_identifiable_information_pii', models.BooleanField(blank=True, default=False, null=True)),
                ('is_storing_protected_health_information_phi', models.BooleanField(blank=True, default=False, null=True)),
                ('is_using_artificial_intelligence', models.BooleanField(blank=True, default=False, null=True)),
                ('link_development_server', models.CharField(blank=True, max_length=255, null=True)),
                ('link_divio', models.CharField(blank=True, max_length=255, null=True)),
                ('link_gitlab_repository', models.CharField(blank=True, max_length=255, null=True)),
                ('link_gitlab_wiki', models.CharField(blank=True, max_length=255, null=True)),
                ('link_logs', models.CharField(blank=True, max_length=255, null=True)),
                ('link_lucid', models.CharField(blank=True, max_length=255, null=True)),
                ('link_open_ai', models.CharField(blank=True, max_length=255, null=True)),
                ('link_postman', models.CharField(blank=True, max_length=255, null=True)),
                ('link_production_server', models.CharField(blank=True, max_length=255, null=True)),
                ('link_production_server_external', models.CharField(blank=True, max_length=255, null=True)),
                ('link_sentry_io', models.CharField(blank=True, max_length=255, null=True)),
                ('link_software_bill_of_materials_sbom', models.CharField(blank=True, max_length=255, null=True)),
                ('link_staging_server', models.CharField(blank=True, max_length=255, null=True)),
                ('link_support_email', models.CharField(blank=True, max_length=255, null=True)),
                ('link_teams_channel', models.CharField(blank=True, max_length=255, null=True)),
                ('link_training', models.CharField(blank=True, max_length=255, null=True)),
                ('link_ticket_submission', models.CharField(blank=True, max_length=255, null=True)),
                ('link_whiteboard', models.CharField(blank=True, max_length=255, null=True)),
                ('link_wrike', models.CharField(blank=True, max_length=255, null=True)),
                ('peak_userbase', models.IntegerField(blank=True, null=True)),
                ('type_authentication', models.CharField(blank=True, choices=[('Active Directory (AD)', 'Active Directory (AD)'), ('Custom', 'Custom')], max_length=255, null=True)),
                ('type_authorization', models.CharField(blank=True, choices=[('Active Directory (AD)', 'Active Directory (AD)'), ('Custom', 'Custom')], max_length=255, null=True)),
                ('type_deployment_medium', models.CharField(blank=True, choices=[('Cloud - Azure Kubernetes Service (AKS)', 'Cloud - Azure Kubernetes Service (AKS)'), ('Cloud - Divio', 'Cloud - Divio'), ('On-Premises - Windows Internet Information Services (IIS)', 'On-Premises - Windows Internet Information Services (IIS)'), ('On-Premises - Debian Linux', 'On-Premises - Debian Linux')], max_length=255, null=True)),
                ('type_lifecycle', models.CharField(blank=True, choices=[('Active', 'Active'), ('Awaiting Approval', 'Awaiting Approval'), ('Deprecated', 'Deprecated'), ('In Development', 'In Development'), ('Hyper Care', 'Hyper Care'), ('Idea Submission', 'Idea Submission'), ('In Deprecation Period', 'In Deprecation Period'), ('Limited Support', 'Limited Support'), ('In Planning', 'In Planning'), ('Approval Rejected', 'Approval Rejected')], max_length=255, null=True)),
                ('type_platform_target', models.CharField(blank=True, choices=[('Background Task', 'Background Task'), ('Chrome Plugin', 'Chrome Plugin'), ('IOS', 'IOS'), ('Microsoft Excel', 'Microsoft Excel'), ('Microsoft Excel + Visual Basic for Applications', 'Microsoft Excel + Visual Basic for Applications'), ('Microsoft Word', 'Microsoft Word'), ('WEB', 'WEB')], max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application_group_platform', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.applicationgroup')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person_architect', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.person')),
                ('person_lead_developer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.person')),
                ('person_product_manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.person')),
                ('person_product_owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.person')),
                ('person_project_manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.person')),
                ('person_scrum_master', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.person')),
            ],
            options={
                'verbose_name': 'historical application',
                'verbose_name_plural': 'historical applications',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='application',
            name='person_architect',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='applications_as_architect', to='core.person'),
        ),
        migrations.AddField(
            model_name='application',
            name='person_developers',
            field=models.ManyToManyField(blank=True, related_name='applications_developer_of', to='core.person'),
        ),
        migrations.AddField(
            model_name='application',
            name='person_lead_developer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='applications_as_lead_developer', to='core.person'),
        ),
        migrations.AddField(
            model_name='application',
            name='person_product_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='applications_as_product_manager', to='core.person'),
        ),
        migrations.AddField(
            model_name='application',
            name='person_product_owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='applications_as_product_owner', to='core.person'),
        ),
        migrations.AddField(
            model_name='application',
            name='person_project_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='applications_as_project_manager', to='core.person'),
        ),
        migrations.AddField(
            model_name='application',
            name='person_scrum_master',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='applications_as_scrum_master', to='core.person'),
        ),
        migrations.AddField(
            model_name='application',
            name='person_stakeholders',
            field=models.ManyToManyField(blank=True, related_name='applications_stakeholder_of', to='core.person'),
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'policies',
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code_billing', models.CharField(blank=True, max_length=255, null=True)),
                ('applications', models.ManyToManyField(blank=True, to='core.application')),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('person_stake_holders', models.ManyToManyField(blank=True, to='core.person')),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='ReleaseBundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_code_freeze', models.DateField(blank=True, null=True)),
                ('date_demo', models.DateField(blank=True, null=True)),
                ('date_release', models.DateField(blank=True, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('type_product_owner_sign_off', models.CharField(blank=True, choices=[('Approved', 'Approved'), ('Denied', 'Denied'), ('Pending', 'Pending')], max_length=255, null=True)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='releases', to='core.application')),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('release_bundle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='releases', to='core.releasebundle')),
            ],
            options={
                'ordering': ['-version', '-id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalRelease',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('type_product_owner_sign_off', models.CharField(blank=True, choices=[('Approved', 'Approved'), ('Denied', 'Denied'), ('Pending', 'Pending')], max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.application')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('release_bundle', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.releasebundle')),
            ],
            options={
                'verbose_name': 'historical release',
                'verbose_name_plural': 'historical releases',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_for_soc', models.BooleanField(blank=True, default=False, null=True)),
                ('is_for_spsrd', models.BooleanField(blank=True, default=False, null=True)),
                ('is_functional_requirement', models.BooleanField(blank=True, default=False, null=True)),
                ('applications', models.ManyToManyField(blank=True, to='core.application')),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.AddField(
            model_name='person',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='people_who_hold_this_role', to='core.role'),
        ),
        migrations.CreateModel(
            name='Secret',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('encrypted_value', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.AddField(
            model_name='application',
            name='service_providers',
            field=models.ManyToManyField(blank=True, related_name='applications_that_use_service_provider', to='core.serviceprovider'),
        ),
        migrations.CreateModel(
            name='ServiceProviderSecurityRequirementsDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('applications', models.ManyToManyField(blank=True, to='core.application')),
                ('clients', models.ManyToManyField(blank=True, to='core.client')),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('requirements', models.ManyToManyField(blank=True, to='core.requirement')),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(blank=True, max_length=255, null=True)),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.AddField(
            model_name='person',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='people_who_hold_this_skill', to='core.skill'),
        ),
        migrations.CreateModel(
            name='SoftwareBillOfMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aliases_csv', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name', '-id'],
            },
        ),
        migrations.AddField(
            model_name='application',
            name='tools',
            field=models.ManyToManyField(blank=True, related_name='applications_that_use_tool', to='core.tool'),
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'vulnerabilities',
                'ordering': ['name', '-id'],
            },
        ),
    ]

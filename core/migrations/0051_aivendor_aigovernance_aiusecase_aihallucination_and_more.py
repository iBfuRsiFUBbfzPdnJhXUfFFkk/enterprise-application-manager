# Generated by Django 5.1.7 on 2025-10-15 00:32

import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0050_historicallogincredential_logincredential'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIVendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enumeration_attack_uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=255, null=True)),
                ('support_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'AI Vendor',
                'verbose_name_plural': 'AI Vendors',
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='AIGovernance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enumeration_attack_uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('approval_status', models.CharField(blank=True, choices=[('Approved', 'Approved'), ('Denied', 'Denied'), ('Pending', 'Pending')], max_length=255, null=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('contract_number', models.CharField(blank=True, max_length=255, null=True)),
                ('contract_url', models.CharField(blank=True, max_length=255, null=True)),
                ('terms_of_service_url', models.CharField(blank=True, max_length=255, null=True)),
                ('terms_of_use_url', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_policy_url', models.CharField(blank=True, max_length=255, null=True)),
                ('data_protection_measures', models.CharField(blank=True, max_length=255, null=True)),
                ('data_used_for_training', models.BooleanField(blank=True, default=False, null=True)),
                ('data_retention_policy', models.CharField(blank=True, max_length=255, null=True)),
                ('compliance_framework', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_assessment_completed', models.BooleanField(blank=True, default=False, null=True)),
                ('risk_assessment_date', models.DateField(blank=True, null=True)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ai_governance', to='core.application')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ai_governance_approvals', to='core.person')),
                ('supporting_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ai_governance_supporting', to='core.document')),
                ('ai_vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ai_governance_records', to='core.aivendor')),
            ],
            options={
                'verbose_name': 'AI Governance',
                'verbose_name_plural': 'AI Governance Records',
                'ordering': ['-approval_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='AIUseCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enumeration_attack_uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('explanation', models.CharField(blank=True, max_length=255, null=True)),
                ('purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_benefit', models.CharField(blank=True, max_length=255, null=True)),
                ('data_description', models.CharField(blank=True, max_length=255, null=True)),
                ('data_sources', models.CharField(blank=True, max_length=255, null=True)),
                ('data_sensitivity_level', models.CharField(blank=True, max_length=255, null=True)),
                ('personal_data_involved', models.BooleanField(blank=True, default=False, null=True)),
                ('systems_description', models.CharField(blank=True, max_length=255, null=True)),
                ('data_protection_measures', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption_used', models.BooleanField(blank=True, default=False, null=True)),
                ('access_controls', models.CharField(blank=True, max_length=255, null=True)),
                ('data_used_for_ai_training', models.BooleanField(blank=True, default=False, null=True)),
                ('training_data_opt_out_available', models.BooleanField(blank=True, default=False, null=True)),
                ('model_version', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_level', models.CharField(blank=True, max_length=255, null=True)),
                ('monitoring_approach', models.CharField(blank=True, max_length=255, null=True)),
                ('human_oversight_required', models.BooleanField(blank=True, default=False, null=True)),
                ('ai_governance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='use_cases', to='core.aigovernance')),
                ('applications_involved', models.ManyToManyField(blank=True, to='core.application')),
                ('databases_involved', models.ManyToManyField(blank=True, to='core.database')),
                ('tools_involved', models.ManyToManyField(blank=True, to='core.tool')),
            ],
            options={
                'verbose_name': 'AI Use Case',
                'verbose_name_plural': 'AI Use Cases',
                'ordering': ['name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='AIHallucination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enumeration_attack_uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('incident_date', models.DateField(blank=True, null=True)),
                ('severity', models.CharField(blank=True, choices=[('Critical', 'Critical'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=255, null=True)),
                ('hallucination_description', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_output', models.CharField(blank=True, max_length=255, null=True)),
                ('actual_output', models.CharField(blank=True, max_length=255, null=True)),
                ('user_prompt', models.CharField(blank=True, max_length=255, null=True)),
                ('context_information', models.CharField(blank=True, max_length=255, null=True)),
                ('impact_description', models.CharField(blank=True, max_length=255, null=True)),
                ('users_affected_count', models.CharField(blank=True, max_length=255, null=True)),
                ('business_impact', models.CharField(blank=True, max_length=255, null=True)),
                ('resolution_description', models.CharField(blank=True, max_length=255, null=True)),
                ('corrective_actions', models.CharField(blank=True, max_length=255, null=True)),
                ('resolved_date', models.DateField(blank=True, null=True)),
                ('incident_ticket_url', models.CharField(blank=True, max_length=255, null=True)),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ai_hallucinations_reported', to='core.person')),
                ('supporting_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ai_hallucination_documentation', to='core.document')),
                ('ai_use_case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='hallucinations', to='core.aiusecase')),
            ],
            options={
                'verbose_name': 'AI Hallucination',
                'verbose_name_plural': 'AI Hallucinations',
                'ordering': ['-incident_date', '-severity', '-id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAIGovernance',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('enumeration_attack_uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('approval_status', models.CharField(blank=True, choices=[('Approved', 'Approved'), ('Denied', 'Denied'), ('Pending', 'Pending')], max_length=255, null=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('contract_number', models.CharField(blank=True, max_length=255, null=True)),
                ('contract_url', models.CharField(blank=True, max_length=255, null=True)),
                ('terms_of_service_url', models.CharField(blank=True, max_length=255, null=True)),
                ('terms_of_use_url', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_policy_url', models.CharField(blank=True, max_length=255, null=True)),
                ('data_protection_measures', models.CharField(blank=True, max_length=255, null=True)),
                ('data_used_for_training', models.BooleanField(blank=True, default=False, null=True)),
                ('data_retention_policy', models.CharField(blank=True, max_length=255, null=True)),
                ('compliance_framework', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_assessment_completed', models.BooleanField(blank=True, default=False, null=True)),
                ('risk_assessment_date', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ai_vendor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.aivendor')),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.application')),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.person')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('supporting_document', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.document')),
            ],
            options={
                'verbose_name': '_Historical Record for AIGovernance',
                'verbose_name_plural': '_Historical Records for AIGovernance',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAIHallucination',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('enumeration_attack_uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('incident_date', models.DateField(blank=True, null=True)),
                ('severity', models.CharField(blank=True, choices=[('Critical', 'Critical'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=255, null=True)),
                ('hallucination_description', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_output', models.CharField(blank=True, max_length=255, null=True)),
                ('actual_output', models.CharField(blank=True, max_length=255, null=True)),
                ('user_prompt', models.CharField(blank=True, max_length=255, null=True)),
                ('context_information', models.CharField(blank=True, max_length=255, null=True)),
                ('impact_description', models.CharField(blank=True, max_length=255, null=True)),
                ('users_affected_count', models.CharField(blank=True, max_length=255, null=True)),
                ('business_impact', models.CharField(blank=True, max_length=255, null=True)),
                ('resolution_description', models.CharField(blank=True, max_length=255, null=True)),
                ('corrective_actions', models.CharField(blank=True, max_length=255, null=True)),
                ('resolved_date', models.DateField(blank=True, null=True)),
                ('incident_ticket_url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ai_use_case', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.aiusecase')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.person')),
                ('supporting_document', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.document')),
            ],
            options={
                'verbose_name': '_Historical Record for AIHallucination',
                'verbose_name_plural': '_Historical Records for AIHallucination',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAIUseCase',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('enumeration_attack_uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('explanation', models.CharField(blank=True, max_length=255, null=True)),
                ('purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_benefit', models.CharField(blank=True, max_length=255, null=True)),
                ('data_description', models.CharField(blank=True, max_length=255, null=True)),
                ('data_sources', models.CharField(blank=True, max_length=255, null=True)),
                ('data_sensitivity_level', models.CharField(blank=True, max_length=255, null=True)),
                ('personal_data_involved', models.BooleanField(blank=True, default=False, null=True)),
                ('systems_description', models.CharField(blank=True, max_length=255, null=True)),
                ('data_protection_measures', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption_used', models.BooleanField(blank=True, default=False, null=True)),
                ('access_controls', models.CharField(blank=True, max_length=255, null=True)),
                ('data_used_for_ai_training', models.BooleanField(blank=True, default=False, null=True)),
                ('training_data_opt_out_available', models.BooleanField(blank=True, default=False, null=True)),
                ('model_version', models.CharField(blank=True, max_length=255, null=True)),
                ('risk_level', models.CharField(blank=True, max_length=255, null=True)),
                ('monitoring_approach', models.CharField(blank=True, max_length=255, null=True)),
                ('human_oversight_required', models.BooleanField(blank=True, default=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ai_governance', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.aigovernance')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '_Historical Record for AIUseCase',
                'verbose_name_plural': '_Historical Records for AIUseCase',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAIVendor',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('enumeration_attack_uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('website_url', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=255, null=True)),
                ('support_url', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '_Historical Record for AIVendor',
                'verbose_name_plural': '_Historical Records for AIVendor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]

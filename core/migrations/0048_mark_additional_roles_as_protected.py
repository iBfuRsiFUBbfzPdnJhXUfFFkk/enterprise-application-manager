# Generated by Django 5.1.7 on 2025-10-13 18:06

from django.db import migrations


def mark_roles_as_protected(apps, schema_editor):
    """
    Mark the following roles as protected to prevent accidental deletion:
    - Architect
    - Developer
    - Lead Developer
    - Product Manager
    - Product Owner
    - Project Manager
    - Scrum Master
    """
    Role = apps.get_model('core', 'Role')

    protected_role_names = [
        'Architect',
        'Developer',
        'Lead Developer',
        'Product Manager',
        'Product Owner',
        'Project Manager',
        'Scrum Master',
    ]

    for role_name in protected_role_names:
        roles = Role.objects.filter(name=role_name)
        if roles.exists():
            roles.update(is_protected=True)
            print(f"Marked role '{role_name}' as protected")
        else:
            print(f"Warning: Role '{role_name}' not found in database")


def unmark_roles_as_protected(apps, schema_editor):
    """
    Reverse migration: Remove protected status from the roles.
    """
    Role = apps.get_model('core', 'Role')

    protected_role_names = [
        'Architect',
        'Developer',
        'Lead Developer',
        'Product Manager',
        'Product Owner',
        'Project Manager',
        'Scrum Master',
    ]

    for role_name in protected_role_names:
        roles = Role.objects.filter(name=role_name)
        if roles.exists():
            roles.update(is_protected=False)
            print(f"Removed protected status from role '{role_name}'")


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0047_historicalthisserverconfiguration_connection_google_maps_api_key_and_more'),
    ]

    operations = [
        migrations.RunPython(mark_roles_as_protected, unmark_roles_as_protected),
    ]
